第四课 类，对象，类成员简介

本节内容：
	一、类(class)是实现世界事物的模型
		①、事物包括“物质”（实体）与“运动”（逻辑）
			1、类就是现实世界引入到程序世界，成为程序世界当中的一个模型，是由抽象这个过程得来的
			2、运动是物质与物质之间的相互关系及作用。
			3、运动在软件工程里边称为逻辑
		②、建模是一个去伪存真、由表及里的过程
			1、抽象这个过程，成为建立模型的过程，简称为建模
			2、去伪存真：在程序世界当中，用不着的功能和属性去掉，保留下来的就是程序当中，要用到的东西
			3、由表及里：类跟外界打交道的方法和属性“界面”(表面，接口)，跟其他沟通的，
				里就是所封装的东西，外面看不见，但是有里面运作的结构（内部的逻辑）。
	二、类与对象的关系
		①、什么时候叫“对象”，什么时候叫“实例”
			注：程序当中的类相当于现实世界的事物（概念化的东西），
			1、对象也叫实例，是类经过“实例化”后得到的内存中的实体
				Formally "instance" is synonymous with "object" ————对象和实例是一回事
				“飞机”与“一架飞机”有何区别？ 天上有（一架）飞机————必须是实例飞，概念是不能飞的
				有些类是不能实例化的，比如“数学”(Math class)，我们不能说“一个数学”	
			2、依照类，我们可以创建对象，这就是“实例化”
				现实世界中常称“对象”，程序世界中常称“实例”
				二者并无太大区别，常常混用，初学者不必迷惑
			3、使用new操作符创建类的实例
			4、引用变量与实例的关系
				孩子与气球
				气球不一定有孩子牵着
				多个孩子可以使用各自的绳子牵着同一个气球，也可以都通过一根绳子牵着气球
				
		②、引用变量与实例的关系 
	三、类的三大成员
		①、属性(Property)
			1、存储数据
			2、数据组合起来表示类或对象当前的状态
		②、方法(Method)
			1、由C语言中的函数(function)进化而来，表示类或对象“能做什么”
			2、工作中90%的时间是在与方法打交道，因为它是“真正做事”、“构成逻辑”的成员
		③、事件(Event)
			1、类或对象通知其他类或对象的机制，为C#所特有(Java通过其他办法实现这个机制)
			2、善用事件机制非常重要，因为灵活而被滥用
				滥用事件，会把项目搞砸
		④、使用MSDN文档
			1、第一行 From class，类的名字
			2、第二行 要不要给微软一些反馈
			3、第三行 用一句话表明这个类是干嘛的
			4、第四行 继承关系列表
			5、第五行 继承在哪个名称空间
			6、第六行 包含在哪个类库里面
			7、Syntax 这个类在申明的时候，是什么样的格式
			8、Constructors 还没讲
			9、Properties 属性
				9.1、 属性下面有个S代表是静态的属性
			10、Methods 方法
				10.1、 方法下面有个S代表是静态的属性
			11、Event 事件
				11.1、 事件下面有个S代表是静态的属性
			12、Explicit Interface Implementations 还没讲
			13、Remarks 用更多的文字信息解释这个类
				很有用处，平时可以看完前面的一句话，再来看这个来确定是否，是自己要用的类
			14、Examples MSDN的示例
			15、Version Information 哪些版本的架构里面包含这个类
			16、Platforms 哪些操作系统或平台能够使用
			17、Thread Safety 多线程的时候，这个类安全部安全
			18、See Also 交叉引用的参考资料
		⑤、某些特殊类或对象在成员方面侧重点不同
			1、模型类或对象重在属性，如Entity Framework
				1.1、Entity Framework: 主要作用是用来存储数据
					属性是非常发达的
					1.1.1 用Nuget 获取Entity Framework
					1.1.2 Entity Framework 用来读写数据库的
					1.1.3 右击项目，添加类，选择Data,添加ADO.NET Data Model,链接数据库，添加表
					1.1.4 modelName name = new modelName();
							foreach(var item in name.Methods)
							{
								 
							}
			2、工具类或对象重在方法，如Math, Console
				2.1 Math 包含在System里面的，都是方法，没有属性和事件
					2.1.1 Math.Abs : 用来取绝对值的
					
			3、通知类或对象重在事件，如各种Timer
				3.1 Timer 最只要是靠时间，来触发事件
					3.1.1 using System.Windows.Threading;
					3.1.2 DispatcherTimer timer = new DispatcherTimer();
						3.1.2.1 实例化
					3.1.3 timer.Interval = TimerSpan.FromSeconds();
						3.1.3.1 timer.Interval : (多长事件会触发一次事件)
						3.1.3.2 TimerSpan.FromSeconds() 多长时间会生成一个TimerSpan
						3.1.3.3 给属性值
					3.1.4 timer.Tick += 按两下Tab键
						3.1.4.1 当时间执行的时候，这个tick函数里面的事件要执行
						3.1.4.2 这是一个事件处理器
						3.1.4.3 挂接事件处理器
					3.1.5 timer.Start();
						3.1.5.1 方法调用
					3.1.6 this.timeTextBox.Text = DataTime.now.ToString();
					
	四、类的静态成员与实例成员
		①、关于“绑定”(Binding)
		②、静态(Static)成员在语义表示它是“类的成员”
			1、这个成员隶属于某个类的
			2、这个类与生俱来的 
			3、Console.WritLine
				WritLine属于静态方法
		③、实例(非静态)成员在语义表示它是“对象的成员”，
			1、这个成员属于某个对象的，不是属于类
			2、From form = new From();
				form.Text = "Hello";
				form.ShowDialog();
		④、绑定(Binding)指的是编译器如何把一个成员与类或对象关联起来
			1、不可小觑"."操作符————成员访问操作符

作业：跟着视频进行操作，直到能够自己动手编写这些程序